1. npm i -g @nestjs/cli
2. nest new nest-app (nest-app es el nombre de lo que quiero crear)
  - selecciono npm
3.cd nest-app
4. npm i mongoose @nestjs/mongoose
5. creo la carpeta de la entiendad que vaya a usar segun lo requiera: task en este caso
6. nest generate module task
7. nest generate controller task
8. nest generate service task

NOTA: si traigo el archivo de un repo que tiene ignore de los node node_modules
debo ejecutar inicialmente el 1 y el 4 para que corra.

---ENTIDAD---
9. Creo la entidad a mano:
  - creo archivo entidad.entity.ts
  - hago imports:
	import {Prop, Schema, SchemaFactory} from 	"@nestjs/mongoose";
	import { Document } from "mongoose";
  - hago el Schema:
	Decorador Schema.  Decorador Prop() siempre 	encima de cada una de las claves del schema
  - No olvidar que la clase extends Document
  - exportar la constante

---APP Module ---
10. Importo :

import { TaskModule } from './task/task.module'; --> modulo de la entidad
import {MongooseModule} from "@nestjs/mongoose";-->modulo de mongoose, esto es para la conexion

11. en los imports de @Module agrego TaskModule, y el MongooseModule:
imports: [TaskModule, MongooseModule.forRoot
('mongodb+srv://manutorres9312:Wwl9ejoe1FicGqTV@db-ejemplo-01.elrgq55.mongodb.net/test')],

Aqui tener en cuenta que el profe decia que despues de test va /nombrecoleccion pero eso arroja error.

---ENTIDAD (task) Module ---

12. Hago importaciones: Module, MongooseModule, y del controlador, servicio y entidad

13. Creo el imports con la estructura: 

imports: [MongooseModule.forFeature([
    {
      name: Task.name,
      schema: TaskSchema
    }
  ])],

  Esa estructura siempre va a ser igual (name, schema)

----ENTIDAD (task) Service ---

14. Hago los imports

15. agrego el constructor

16. Agrego toda la logica de negocio (las funciones que necesito)

---- ENTIDAD (task) Controller --

17. traigo de services la logica. recordar que lo que va en () 
de los decoradores me da la ruta bajo la cual los llamo




Iniciar la aplicaciÃ³n
npm run start -->inicia la aplicacion
o usamos npm run start:dev a nivel de toda la carpeta, es decir, a nivel de
carpeta que guarda src, node_modules, etc.